buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'de.aaschmid:gradle-cpd-plugin:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'cpd'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'maven-publish'

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
    applyMavenExclusions = false
}
project.archivesBaseName = "backend"
if (project.hasProperty('projectVersion')) {
	project.version = project.projectVersion
} else {
	project.version = '0.0.1-RELEASE'
}
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
repositories {
	mavenCentral()
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'by.brest.project'
			artifactId = 'devops-training-backend'
			version = '0.0.1-SNAPSHOT'

			from components.java
		}
	}
}

findbugsMain() {
	enabled = true
	ignoreFailures = true
	reports {
		xml.enabled = true
	}
}

findbugsTest() {
	enabled = true
	ignoreFailures = true
	reports {
		xml.enabled = true
	}
}

pmdMain() {
	enabled = true
	reports {
		xml.enabled = true
		html.enabled = false
	}
}

pmdTest() {
	enabled = true
	reports {
		xml.enabled = true
		html.enabled = false
	}
}

cpdCheck() {
	enabled = true
	ignoreFailures = true
	reports {
		csv.enabled = false
		text.enabled = false
		xml.enabled = true
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.jsonwebtoken:jjwt:0.9.1')
    compile('org.springframework.boot:spring-boot-starter-security')
	compile('joda-time:joda-time:2.10')
	compile(group: 'org.postgresql', name: 'postgresql', version: '42.0.0')
	compileOnly('org.projectlombok:lombok')
	runtime('com.h2database:h2')
    testCompile 'io.rest-assured:rest-assured:3.1.1'
	testCompile 'io.rest-assured:spring-mock-mvc:3.1.1'
	testCompile 'org.springframework.security:spring-security-test'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.2')
	compile group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1'
}
